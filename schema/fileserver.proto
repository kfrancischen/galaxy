syntax = "proto3";

package galaxy_schema;
import "google/protobuf/any.proto";

service FileSystem {
    // attribute RPC
    rpc GetAttr( GetAttrRequest ) returns ( GetAttrResponse ) {}

    // Directory handling
    rpc CreateDirIfNotExist( CreateDirRequest ) returns ( CreateDirResponse ) {}
    rpc DirOrDie( DirOrDieRequest ) returns( DirOrDieResponse ) {}
    rpc RmDir( RmDirRequest ) returns ( RmDirResponse ) {}
    rpc RmDirRecursive( RmDirRecursiveRequest ) returns ( RmDirRecursiveResponse ) {}
    rpc ListDirsInDir( ListDirsInDirRequest ) returns ( ListDirsInDirResponse ) {}
    rpc ListFilesInDir( ListFilesInDirRequest ) returns ( ListFilesInDirResponse ) {}
    rpc ListAllInDirRecursive( ListAllInDirRecursiveRequest ) returns ( ListAllInDirRecursiveResponse ) {}

    // File handling
    rpc CreateFileIfNotExist( CreateFileRequest ) returns ( CreateFileResponse ) {}
    rpc FileOrDie( FileOrDieRequest ) returns ( FileOrDieResponse ) {}
    rpc RmFile( RmFileRequest ) returns ( RmFileResponse ) {}
    rpc RenameFile( RenameFileRequest ) returns ( RenameFileResponse ) {}
    rpc Read( ReadRequest ) returns ( ReadResponse ) {}
    rpc ReadMultiple( ReadMultipleRequest ) returns ( ReadMultipleResponse ) {}
    rpc Write( WriteRequest ) returns ( WriteResponse ) {}
    rpc WriteMultiple( WriteMultipleRequest ) returns ( WriteMultipleResponse ) {}

    // Copy/Move file
    rpc CopyFile( stream CopyRequest ) returns ( CopyResponse ) {}

    // Health check
    rpc CheckHealth( HealthCheckRequest ) returns ( HealthCheckResponse ) {}

    // Remote execution
    rpc RemoteExecution( RemoteExecutionRequest ) returns ( RemoteExecutionResponse ) {}

    // Cross cell
    rpc CrossCellCall( CrossCellRequest ) returns ( CrossCellResponse ) {}
}

message FileSystemStatus {
    int32 return_code = 1;
    string return_message = 2;
}

message CellConfig {
    string cell = 1;
    string fs_root = 2;
    string fs_log_dir = 3;
    string fs_password = 4;
    int32 fs_log_ttl = 5;
    int32 fs_port = 6;
    int32 fs_stats_port = 7;
    string fs_ip = 8;
    int32 fs_verbose_level = 9;
    bool fs_alsologtostderr = 10;
    int32 fs_num_thread = 11;
    int32 fs_max_msg_size = 12;
    bool disabled = 13;
}

message SingleRequestCellConfigs {
    CellConfig from_cell_config = 1;
    CellConfig to_cell_config = 2;
}

message FileAnalyzerResult {
    string from_cell = 1;
    string to_cell = 2;
    string path = 3;
    bool is_remote = 4;
    SingleRequestCellConfigs configs = 5;
    bool is_shared = 6;
}

message FileSystemUsage {
    double total_disk = 1;
    double used_disk = 2;
    double total_ram = 3;
    double used_ram = 4;
}

enum WriteMode {
    OVERWRITE = 0;
    APPEND = 1;
}

enum CrossCellCallType {
    COPYFILE = 0;
    MOVEFILE = 1;
}

// process id and owner information
message Owner {
    uint32 uid = 1;		/* user ID of owner */
    uint32 gid = 2;		/* group ID of owner */
}

message Credential {
    string password = 1;
}

message Attribute {
    uint64     dev		= 1;    /* ID of device containing file */
    uint64     ino		= 2;    /* inode number */
    uint64     mode		= 3;    /* protection */
    uint64     nlink 		= 4;   	/* number of hard links */
    Owner      owner 		= 5;
    uint64     rdev		= 6;    /* device ID (if special file) */
    uint64     size		= 7;    /* total size, in bytes */
    uint64     blksize 		= 8; 	/* blocksize for file system I/O */
    uint64     blocks 		= 9;  	/* number of 512B blocks allocated */
    uint64     atime 		= 10;   /* time of last access */
    uint64     atimens		= 11;
    uint64     mtime		= 12;   /* time of last modification */
    uint64     mtimens		= 13;
    uint64     ctime		= 14;   /* time of last status change */
    uint64     ctimens		= 15;
}

message GetAttrRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
}

message GetAttrResponse {
	Attribute attr = 1;
	FileSystemStatus status = 2;
}

// Make directory
message CreateDirRequest {
    string name = 1;
    uint64 mode = 2;
    Credential cred = 3;
    string from_cell = 4;
}

message CreateDirResponse {
    FileSystemStatus status = 1;
}

message DirOrDieRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
}

message DirOrDieResponse {
    string name = 1;
    FileSystemStatus status = 2;
}

message RmDirRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
    bool include_hidden = 4;
}

message RmDirResponse {
    FileSystemStatus status = 1;
}

message RmDirRecursiveRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
    bool include_hidden = 4;
}

message RmDirRecursiveResponse {
    FileSystemStatus status = 1;
}

message ListDirsInDirRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
}

message ListDirsInDirResponse {
    map<string, Attribute> sub_dirs = 1;
    FileSystemStatus status = 2;
}


message ListFilesInDirRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
    bool include_hidden = 4;
}

message ListFilesInDirResponse {
    map<string, Attribute> sub_files = 1;
    FileSystemStatus status = 2;
}

message ListAllInDirRecursiveRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
    bool include_hidden = 4;
}

message ListAllInDirRecursiveResponse {
    map<string, Attribute> sub_files = 1;
    map<string, Attribute> sub_dirs = 2;
    FileSystemStatus status = 3;
}

// File handling
message CreateFileRequest {
    string name = 1;
    uint64 mode = 2;
    Credential cred = 3;
    string from_cell = 4;
}

message CreateFileResponse {
    FileSystemStatus status = 1;
}

message FileOrDieRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
}

message FileOrDieResponse {
    string name = 1;
    FileSystemStatus status = 2;
}

message RmFileRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
    bool is_hidden = 4;
}

message RmFileResponse {
    FileSystemStatus status = 1;
}

message RenameFileRequest {
    string old_name = 1;
    string new_name = 2;
    Credential cred = 3;
    string from_cell = 4;
}

message RenameFileResponse {
    FileSystemStatus status = 1;
}


message ReadRequest {
    string name = 1;
    Credential cred = 2;
    string from_cell = 3;
}

message ReadMultipleRequest {
    repeated string names = 1;
    Credential cred = 2;
    string from_cell = 3;
}

message ReadResponse {
    bytes data = 1;
    FileSystemStatus status = 2;
}

message ReadMultipleResponse {
    map<string, ReadResponse> data = 1;
}

message WriteRequest {
    string name = 1;
    bytes data = 2;
    WriteMode mode = 3;
    Credential cred = 4;
    string from_cell = 5;
}

message WriteMultipleRequest {
    map<string, bytes> data = 1;
    WriteMode mode = 2;
    Credential cred = 3;
    string from_cell = 4;
}

message CopyRequest {
    string from_name = 1;
    string to_name = 2;
    Credential cred = 3;
    bytes data = 4;
    string from_cell = 5;
}

message CrossCellRequest {
    CrossCellCallType call_type = 1;
    google.protobuf.Any request = 2;
    Credential cred = 3;
}

message CrossCellResponse {
    CrossCellCallType call_type = 1;
    google.protobuf.Any response = 2;
}

message WriteResponse {
    FileSystemStatus status = 1;
}

message WriteMultipleResponse {
    map<string, WriteResponse> data = 1;
}

message CopyResponse {
    FileSystemStatus status = 1;
}

message HealthCheckRequest {
    int64 timestamp = 1;
    Credential cred = 2;
    string from_cell = 3;
}

message HealthCheckResponse {
    uint64 timestamp = 1;
    bool healthy = 2;
    FileSystemUsage usage = 3;
}

message RemoteExecutionRequest {
    string home_dir = 1;
    string main = 2;
    map<string, string> env_kargs = 3;
    repeated string program_args = 4;
    Credential cred = 5;
    string from_cell = 6;
}

message RemoteExecutionResponse {
    string raw_cmd = 1;
    string data = 2;
    FileSystemStatus status = 3;
}
